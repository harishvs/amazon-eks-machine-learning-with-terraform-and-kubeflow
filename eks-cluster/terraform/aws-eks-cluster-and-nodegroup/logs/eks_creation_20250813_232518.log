[2025-08-13 23:25:18] Starting EKS cluster creation process
[2025-08-13 23:25:18] Initializing Terraform...
Initializing the backend...
Upgrading modules...
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for cert_manager...
- cert_manager in .terraform/modules/cert_manager
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for ebs_csi_driver_irsa...
- ebs_csi_driver_irsa in .terraform/modules/ebs_csi_driver_irsa
Downloading registry.terraform.io/aws-ia/eks-blueprints-addons/aws 1.21.0 for eks_blueprints_addons...
- eks_blueprints_addons in .terraform/modules/eks_blueprints_addons
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.argo_events...
- eks_blueprints_addons.argo_events in .terraform/modules/eks_blueprints_addons.argo_events
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.argo_rollouts...
- eks_blueprints_addons.argo_rollouts in .terraform/modules/eks_blueprints_addons.argo_rollouts
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.argo_workflows...
- eks_blueprints_addons.argo_workflows in .terraform/modules/eks_blueprints_addons.argo_workflows
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.argocd...
- eks_blueprints_addons.argocd in .terraform/modules/eks_blueprints_addons.argocd
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.aws_cloudwatch_metrics...
- eks_blueprints_addons.aws_cloudwatch_metrics in .terraform/modules/eks_blueprints_addons.aws_cloudwatch_metrics
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.aws_efs_csi_driver...
- eks_blueprints_addons.aws_efs_csi_driver in .terraform/modules/eks_blueprints_addons.aws_efs_csi_driver
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.aws_for_fluentbit...
- eks_blueprints_addons.aws_for_fluentbit in .terraform/modules/eks_blueprints_addons.aws_for_fluentbit
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.aws_fsx_csi_driver...
- eks_blueprints_addons.aws_fsx_csi_driver in .terraform/modules/eks_blueprints_addons.aws_fsx_csi_driver
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.aws_gateway_api_controller...
- eks_blueprints_addons.aws_gateway_api_controller in .terraform/modules/eks_blueprints_addons.aws_gateway_api_controller
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.aws_load_balancer_controller...
- eks_blueprints_addons.aws_load_balancer_controller in .terraform/modules/eks_blueprints_addons.aws_load_balancer_controller
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.aws_node_termination_handler...
- eks_blueprints_addons.aws_node_termination_handler in .terraform/modules/eks_blueprints_addons.aws_node_termination_handler
Downloading registry.terraform.io/terraform-aws-modules/sqs/aws 4.0.1 for eks_blueprints_addons.aws_node_termination_handler_sqs...
- eks_blueprints_addons.aws_node_termination_handler_sqs in .terraform/modules/eks_blueprints_addons.aws_node_termination_handler_sqs
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.aws_privateca_issuer...
- eks_blueprints_addons.aws_privateca_issuer in .terraform/modules/eks_blueprints_addons.aws_privateca_issuer
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.bottlerocket_shadow...
- eks_blueprints_addons.bottlerocket_shadow in .terraform/modules/eks_blueprints_addons.bottlerocket_shadow
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.bottlerocket_update_operator...
- eks_blueprints_addons.bottlerocket_update_operator in .terraform/modules/eks_blueprints_addons.bottlerocket_update_operator
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.cert_manager...
- eks_blueprints_addons.cert_manager in .terraform/modules/eks_blueprints_addons.cert_manager
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.cluster_autoscaler...
- eks_blueprints_addons.cluster_autoscaler in .terraform/modules/eks_blueprints_addons.cluster_autoscaler
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.cluster_proportional_autoscaler...
- eks_blueprints_addons.cluster_proportional_autoscaler in .terraform/modules/eks_blueprints_addons.cluster_proportional_autoscaler
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.external_dns...
- eks_blueprints_addons.external_dns in .terraform/modules/eks_blueprints_addons.external_dns
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.external_secrets...
- eks_blueprints_addons.external_secrets in .terraform/modules/eks_blueprints_addons.external_secrets
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.gatekeeper...
- eks_blueprints_addons.gatekeeper in .terraform/modules/eks_blueprints_addons.gatekeeper
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.ingress_nginx...
- eks_blueprints_addons.ingress_nginx in .terraform/modules/eks_blueprints_addons.ingress_nginx
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.karpenter...
- eks_blueprints_addons.karpenter in .terraform/modules/eks_blueprints_addons.karpenter
Downloading registry.terraform.io/terraform-aws-modules/sqs/aws 4.0.1 for eks_blueprints_addons.karpenter_sqs...
- eks_blueprints_addons.karpenter_sqs in .terraform/modules/eks_blueprints_addons.karpenter_sqs
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.kube_prometheus_stack...
- eks_blueprints_addons.kube_prometheus_stack in .terraform/modules/eks_blueprints_addons.kube_prometheus_stack
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.metrics_server...
- eks_blueprints_addons.metrics_server in .terraform/modules/eks_blueprints_addons.metrics_server
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.secrets_store_csi_driver...
- eks_blueprints_addons.secrets_store_csi_driver in .terraform/modules/eks_blueprints_addons.secrets_store_csi_driver
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.secrets_store_csi_driver_provider_aws...
- eks_blueprints_addons.secrets_store_csi_driver_provider_aws in .terraform/modules/eks_blueprints_addons.secrets_store_csi_driver_provider_aws
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.velero...
- eks_blueprints_addons.velero in .terraform/modules/eks_blueprints_addons.velero
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for eks_blueprints_addons.vpa...
- eks_blueprints_addons.vpa in .terraform/modules/eks_blueprints_addons.vpa
- istio in istio
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for istio.istio_base...
- istio.istio_base in .terraform/modules/istio.istio_base
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for istio.istio_cni...
- istio.istio_cni in .terraform/modules/istio.istio_cni
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for istio.istio_istiod...
- istio.istio_istiod in .terraform/modules/istio.istio_istiod
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 20.37.0 for karpenter...
- karpenter in .terraform/modules/karpenter/modules/karpenter
- kubeflow-components in kubeflow
- mlflow in mlflow
Downloading registry.terraform.io/aws-ia/eks-blueprints-addon/aws 1.1.1 for profiles-controller-irsa...
- profiles-controller-irsa in .terraform/modules/profiles-controller-irsa
- slurm in slurm
Initializing provider plugins...
- Finding hashicorp/helm versions matching ">= 2.9.0, ~> 2.17.0"...
- Finding hashicorp/aws versions matching ">= 2.7.0, >= 4.36.0, >= 4.47.0, >= 5.0.0, >= 5.95.0"...
- Finding latest version of hashicorp/tls...
- Finding latest version of hashicorp/null...
- Finding hashicorp/time versions matching ">= 0.9.0"...
- Finding hashicorp/random versions matching ">= 3.6.0"...
- Finding hashicorp/kubernetes versions matching ">= 2.20.0"...
- Finding gavinbunney/kubectl versions matching ">= 1.14.0"...
- Using previously-installed gavinbunney/kubectl v1.19.0
- Using previously-installed hashicorp/helm v2.17.0
- Using previously-installed hashicorp/aws v6.8.0
- Using previously-installed hashicorp/tls v4.1.0
- Using previously-installed hashicorp/null v3.2.4
- Using previously-installed hashicorp/time v0.13.1
- Using previously-installed hashicorp/random v3.7.2
- Using previously-installed hashicorp/kubernetes v2.38.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
[2025-08-13 23:25:31] Applying Terraform configuration...
random_string.static_user_id: Refreshing state... [id=lRjfEaPmBpjr4gBo]
random_password.oidc_client_secret: Refreshing state... [id=none]
random_password.static_password: Refreshing state... [id=none]
null_resource.git_clone: Refreshing state... [id=4542936971944722173]
module.ebs_csi_driver_irsa.data.aws_caller_identity.current[0]: Reading...
data.aws_caller_identity.current: Reading...
module.profiles-controller-irsa.data.aws_caller_identity.current[0]: Reading...
aws_eip.ip: Refreshing state... [id=eipalloc-05fe6f5d7823f32f7]
module.profiles-controller-irsa.data.aws_partition.current[0]: Reading...
aws_iam_role.cluster_role: Refreshing state... [id=efa-blog-cluster-control-role]
module.profiles-controller-irsa.data.aws_partition.current[0]: Read complete after 0s [id=aws]
data.aws_eks_cluster_auth.cluster: Reading...
module.ebs_csi_driver_irsa.data.aws_partition.current[0]: Reading...
aws_vpc.vpc: Refreshing state... [id=vpc-0b76bd974b3f6904b]
data.aws_eks_cluster_auth.cluster: Read complete after 0s [id=efa-blog-cluster]
module.ebs_csi_driver_irsa.data.aws_caller_identity.current[0]: Read complete after 0s [id=043632497353]
module.ebs_csi_driver_irsa.data.aws_partition.current[0]: Read complete after 0s [id=aws]
data.aws_iam_policy_document.cert_manager: Reading...
data.aws_caller_identity.current: Read complete after 0s [id=043632497353]
module.karpenter[0].data.aws_partition.current: Reading...
aws_efs_file_system.fs: Refreshing state... [id=fs-058f520ab98e60ed5]
module.karpenter[0].data.aws_partition.current: Read complete after 0s [id=aws]
module.profiles-controller-irsa.data.aws_caller_identity.current[0]: Read complete after 0s [id=043632497353]
module.profiles-controller-irsa.data.aws_iam_policy_document.this[0]: Reading...
data.aws_iam_policy_document.cert_manager: Read complete after 0s [id=3416383923]
module.karpenter[0].data.aws_caller_identity.current: Reading...
module.karpenter[0].data.aws_region.current: Reading...
module.karpenter[0].data.aws_iam_policy_document.node_assume_role[0]: Reading...
module.profiles-controller-irsa.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=1576394036]
module.karpenter[0].data.aws_region.current: Read complete after 0s [id=ap-southeast-4]
module.karpenter[0].data.aws_iam_policy_document.node_assume_role[0]: Read complete after 0s [id=2560088296]
module.karpenter[0].data.aws_caller_identity.current: Read complete after 0s [id=043632497353]
aws_subnet.private[0]: Refreshing state... [id=subnet-00703776efcad98a4]
aws_internet_gateway.igw: Refreshing state... [id=igw-0a84056ff90e968d2]
aws_security_group.efs_sg: Refreshing state... [id=sg-0b0c886fb0b74d7df]
aws_subnet.public[1]: Refreshing state... [id=subnet-000a3d0d26dba0949]
aws_subnet.public[0]: Refreshing state... [id=subnet-02d5373c95f55588f]
aws_subnet.private[2]: Refreshing state... [id=subnet-0723a6a23707c4ffe]
aws_security_group.fsx_lustre_sg: Refreshing state... [id=sg-0b03e6071277beb77]
aws_subnet.public[2]: Refreshing state... [id=subnet-08292ddad9a5f491c]
aws_subnet.private[1]: Refreshing state... [id=subnet-0705bc7c8b5b22fea]
aws_route_table.public: Refreshing state... [id=rtb-0fea54c1d36f06c4f]
aws_route_table_association.public[2]: Refreshing state... [id=rtbassoc-0296d443ce1620107]
aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-0787e6071e22821e2]
aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-0cebaf53227f0d414]
aws_nat_gateway.ngw: Refreshing state... [id=nat-0e30cb527b1584384]
aws_fsx_lustre_file_system.fs: Refreshing state... [id=fs-0e88d04c8c5c117a9]
aws_efs_mount_target.target[0]: Refreshing state... [id=fsmt-0f4306bedd0681298]
aws_efs_mount_target.target[1]: Refreshing state... [id=fsmt-00fcd7122fd8e304e]
aws_efs_mount_target.target[2]: Refreshing state... [id=fsmt-019b87d7386e5af09]
aws_route_table.private: Refreshing state... [id=rtb-03616a67e0b7d1bd0]
aws_route_table_association.private[2]: Refreshing state... [id=rtbassoc-0190d89068d2aa49c]
aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-07b1e1b9b63b7e6c6]
aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-087ee198d8a41591e]
data.aws_ecrpublic_authorization_token.token: Reading...
aws_fsx_data_repository_association.this: Refreshing state... [id=dra-09c5d00b8b4d1846e]
aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy: Refreshing state... [id=efa-blog-cluster-control-role/arn:aws:iam::aws:policy/AmazonEKSServicePolicy]
aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Refreshing state... [id=efa-blog-cluster-control-role/arn:aws:iam::aws:policy/AmazonEKSClusterPolicy]
aws_eks_cluster.eks_cluster: Refreshing state... [id=efa-blog-cluster]
module.karpenter[0].aws_cloudwatch_event_rule.this["instance_rebalance"]: Refreshing state... [id=KarpenterInstanceRebalance-20250813221707087800000006]
module.karpenter[0].aws_iam_role.node[0]: Refreshing state... [id=efa-blog-cluster-karpenter-node-20250813221707209400000008]
aws_security_group_rule.eks_cluster_ingress: Refreshing state... [id=sgrule-1336589498]
module.karpenter[0].aws_cloudwatch_event_rule.this["health_event"]: Refreshing state... [id=KarpenterHealthEvent-20250813221707082900000003]
module.karpenter[0].aws_cloudwatch_event_rule.this["instance_state_change"]: Refreshing state... [id=KarpenterInstanceStateChange-20250813221707085000000004]
data.tls_certificate.this: Reading...
module.karpenter[0].aws_cloudwatch_event_rule.this["spot_interrupt"]: Refreshing state... [id=KarpenterSpotInterrupt-20250813221707086700000005]
module.karpenter[0].aws_sqs_queue.this[0]: Refreshing state... [id=https://sqs.ap-southeast-4.amazonaws.com/043632497353/Karpenter-efa-blog-cluster]
data.tls_certificate.this: Read complete after 0s [id=69e9d4a4895d10da475d2a772e4f3efca1850ba2]
data.aws_ecrpublic_authorization_token.token: Read complete after 1s [id=us-east-1]
helm_release.karpenter-crd[0]: Refreshing state... [id=karpenter-crd]
aws_iam_role.node_role: Refreshing state... [id=efa-blog-cluster-node-role]
helm_release.nvidia_device_plugin: Refreshing state... [id=nvidia-device-plugin]
helm_release.aws-efa-k8s-device-plugin: Refreshing state... [id=aws-efa-k8s-device-plugin]
aws_iam_openid_connect_provider.eks_oidc_provider: Refreshing state... [id=arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635]
module.karpenter[0].aws_cloudwatch_event_target.this["instance_rebalance"]: Refreshing state... [id=KarpenterInstanceRebalance-20250813221707087800000006-KarpenterInterruptionQueueTarget]
module.karpenter[0].aws_cloudwatch_event_target.this["health_event"]: Refreshing state... [id=KarpenterHealthEvent-20250813221707082900000003-KarpenterInterruptionQueueTarget]
module.profiles-controller-irsa.aws_iam_policy.this[0]: Refreshing state... [id=arn:aws:iam::043632497353:policy/efa-blog-cluster-profiles-controller-20250813221707203000000007]
module.karpenter[0].aws_cloudwatch_event_target.this["instance_state_change"]: Refreshing state... [id=KarpenterInstanceStateChange-20250813221707085000000004-KarpenterInterruptionQueueTarget]
module.karpenter[0].aws_cloudwatch_event_target.this["spot_interrupt"]: Refreshing state... [id=KarpenterSpotInterrupt-20250813221707086700000005-KarpenterInterruptionQueueTarget]
module.karpenter[0].data.aws_iam_policy_document.queue[0]: Reading...
module.karpenter[0].data.aws_iam_policy_document.queue[0]: Read complete after 0s [id=2317511512]
module.karpenter[0].aws_sqs_queue_policy.this[0]: Refreshing state... [id=https://sqs.ap-southeast-4.amazonaws.com/043632497353/Karpenter-efa-blog-cluster]
aws_iam_role.user_profile_role: Refreshing state... [id=efa-blog-cluster-user-profile]
module.ebs_csi_driver_irsa.data.aws_iam_policy_document.assume[0]: Reading...
aws_iam_role.cluster_autoscaler: Refreshing state... [id=efa-blog-cluster-cluster-autoscaler-role]
module.ebs_csi_driver_irsa.data.aws_iam_policy_document.assume[0]: Read complete after 0s [id=2484513023]
module.karpenter[0].data.aws_iam_policy_document.controller_assume_role[0]: Reading...
module.karpenter[0].data.aws_iam_policy_document.controller_assume_role[0]: Read complete after 0s [id=3507567203]
module.ebs_csi_driver_irsa.aws_iam_role.this[0]: Refreshing state... [id=efa-blog-cluster-ebs-csi-driver-20250813221708252900000009]
module.karpenter[0].aws_iam_role.controller[0]: Refreshing state... [id=efa-blog-cluster-karpenter-controller-2025081322170870720000000a]
module.karpenter[0].aws_iam_role_policy_attachment.node_additional["s3_policy"]: Refreshing state... [id=efa-blog-cluster-karpenter-node-20250813221707209400000008/arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess]
module.karpenter[0].aws_iam_role_policy_attachment.node["AmazonEKS_CNI_Policy"]: Refreshing state... [id=efa-blog-cluster-karpenter-node-20250813221707209400000008/arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy]
module.karpenter[0].data.aws_iam_policy_document.v033[0]: Reading...
module.karpenter[0].data.aws_iam_policy_document.v1[0]: Reading...
module.karpenter[0].data.aws_iam_policy_document.v033[0]: Read complete after 0s [id=3789617759]
module.karpenter[0].aws_iam_role_policy_attachment.node["AmazonEC2ContainerRegistryReadOnly"]: Refreshing state... [id=efa-blog-cluster-karpenter-node-20250813221707209400000008/arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly]
module.karpenter[0].data.aws_iam_policy_document.v1[0]: Read complete after 0s [id=1901456360]
module.karpenter[0].aws_iam_role_policy_attachment.node["AmazonEKSWorkerNodePolicy"]: Refreshing state... [id=efa-blog-cluster-karpenter-node-20250813221707209400000008/arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy]
module.karpenter[0].data.aws_iam_policy_document.controller[0]: Reading...
module.karpenter[0].data.aws_iam_policy_document.controller[0]: Read complete after 0s [id=3789617759]
aws_iam_role_policy_attachment.node_AmazonS3ReadOnlyPolicy: Refreshing state... [id=efa-blog-cluster-node-role/arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess]
kubectl_manifest.aws_auth[0]: Refreshing state... [id=/api/v1/namespaces/kube-system/configmaps/aws-auth]
aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Refreshing state... [id=efa-blog-cluster-node-role/arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy]
aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Refreshing state... [id=efa-blog-cluster-node-role/arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly]
aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Refreshing state... [id=efa-blog-cluster-node-role/arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy]
module.karpenter[0].aws_iam_policy.controller[0]: Refreshing state... [id=arn:aws:iam::043632497353:policy/KarpenterController-2025081322173231210000000c]
aws_eks_node_group.system_ng: Refreshing state... [id=efa-blog-cluster:system]
module.ebs_csi_driver_irsa.aws_iam_role_policy_attachment.additional["AmazonEBSCSIDriverPolicy"]: Refreshing state... [id=efa-blog-cluster-ebs-csi-driver-20250813221708252900000009/arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy]
aws_iam_role_policy.cluster_autoscaler: Refreshing state... [id=efa-blog-cluster-cluster-autoscaler-role:cluster-autoscaler-policy]
helm_release.cluster-autoscaler: Refreshing state... [id=cluster-autoscaler]
aws_iam_role_policy.user_profile_policy: Refreshing state... [id=efa-blog-cluster-user-profile:user-profile-policy]
module.karpenter[0].aws_iam_role_policy_attachment.controller[0]: Refreshing state... [id=efa-blog-cluster-karpenter-controller-2025081322170870720000000a/arn:aws:iam::043632497353:policy/KarpenterController-2025081322173231210000000c]
kubernetes_namespace.ingress: Refreshing state... [id=ingress]
kubernetes_namespace.kubeflow: Refreshing state... [id=kubeflow]
helm_release.prometheus[0]: Refreshing state... [id=prometheus]
helm_release.karpenter[0]: Refreshing state... [id=karpenter]
helm_release.neuron_helm_chart: Refreshing state... [id=neuron-helm-chart]
kubernetes_namespace.lws-system: Refreshing state... [id=lws-system]
kubernetes_namespace.auth: Refreshing state... [id=auth]
kubernetes_namespace.istio_system: Refreshing state... [id=istio-system]
helm_release.mpi-operator: Refreshing state... [id=mpi-operator]
helm_release.lws: Refreshing state... [id=lws]
module.eks_blueprints_addons.random_bytes.this: Refreshing state...
module.eks_blueprints_addons.time_sleep.this: Refreshing state... [id=2025-08-13T23:11:26Z]
module.profiles-controller-irsa.data.aws_iam_policy_document.assume[0]: Reading...
module.profiles-controller-irsa.data.aws_iam_policy_document.assume[0]: Read complete after 0s [id=495856207]
module.eks_blueprints_addons.aws_cloudformation_stack.usage_telemetry[0]: Refreshing state... [id=arn:aws:cloudformation:ap-southeast-4:043632497353:stack/efa-blog-cluster-9770/c46f2380-789a-11f0-b402-0ef83bb677ef]
module.profiles-controller-irsa.aws_iam_role.this[0]: Refreshing state... [id=efa-blog-cluster-profiles-controller-20250813231056625500000003]
module.eks_blueprints_addons.module.metrics_server.helm_release.this[0]: Refreshing state... [id=metrics-server]
module.eks_blueprints_addons.module.aws_efs_csi_driver.aws_iam_role.this[0]: Refreshing state... [id=aws-efs-csi-driver-20250813231126647100000008]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.aws_iam_role.this[0]: Refreshing state... [id=aws-fsx-csi-driver-2025081323112665280000000a]
module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_role.this[0]: Refreshing state... [id=alb-controller-20250813231126648300000009]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.aws_iam_policy.this[0]: Refreshing state... [id=arn:aws:iam::043632497353:policy/aws-fsx-csi-driver-20250813231058180400000005]
module.profiles-controller-irsa.aws_iam_role_policy_attachment.this[0]: Refreshing state... [id=efa-blog-cluster-profiles-controller-20250813231056625500000003/arn:aws:iam::043632497353:policy/efa-blog-cluster-profiles-controller-20250813221707203000000007]
module.eks_blueprints_addons.aws_eks_addon.this["aws-ebs-csi-driver"]: Refreshing state... [id=efa-blog-cluster:aws-ebs-csi-driver]
module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_policy.this[0]: Refreshing state... [id=arn:aws:iam::043632497353:policy/alb-controller-20250813231056802500000004]
module.eks_blueprints_addons.module.aws_efs_csi_driver.helm_release.this[0]: Refreshing state... [id=aws-efs-csi-driver]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.helm_release.this[0]: Refreshing state... [id=aws-fsx-csi-driver]
module.eks_blueprints_addons.module.aws_efs_csi_driver.aws_iam_policy.this[0]: Refreshing state... [id=arn:aws:iam::043632497353:policy/aws-efs-csi-driver-20250813231058263900000006]
module.eks_blueprints_addons.module.aws_load_balancer_controller.helm_release.this[0]: Refreshing state... [id=aws-load-balancer-controller]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.aws_iam_role_policy_attachment.this[0]: Refreshing state... [id=aws-fsx-csi-driver-2025081323112665280000000a/arn:aws:iam::043632497353:policy/aws-fsx-csi-driver-20250813231058180400000005]
module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_role_policy_attachment.this[0]: Refreshing state... [id=alb-controller-20250813231126648300000009/arn:aws:iam::043632497353:policy/alb-controller-20250813231056802500000004]
module.eks_blueprints_addons.module.aws_efs_csi_driver.aws_iam_role_policy_attachment.this[0]: Refreshing state... [id=aws-efs-csi-driver-20250813231126647100000008/arn:aws:iam::043632497353:policy/aws-efs-csi-driver-20250813231058263900000006]
helm_release.karpenter_components[0]: Refreshing state... [id=karpenter-components]
helm_release.ebs-sc: Refreshing state... [id=ebs-sc]
module.cert_manager.aws_iam_policy.this[0]: Refreshing state... [id=arn:aws:iam::043632497353:policy/cert-manager-2025081323122093210000000b]
module.cert_manager.aws_iam_role.this[0]: Refreshing state... [id=cert-manager-2025081323122095520000000c]
module.cert_manager.aws_iam_role_policy_attachment.this[0]: Refreshing state... [id=cert-manager-2025081323122095520000000c/arn:aws:iam::043632497353:policy/cert-manager-2025081323122093210000000b]
module.cert_manager.helm_release.this[0]: Refreshing state... [id=cert-manager]
helm_release.cluster-issuer: Refreshing state... [id=cluster-issuer]
module.istio.module.istio_base.helm_release.this[0]: Refreshing state... [id=istio-base]
module.istio.module.istio_istiod.helm_release.this[0]: Refreshing state... [id=istio-istiod]
module.istio.module.istio_cni.helm_release.this[0]: Refreshing state... [id=istio-cni]
helm_release.istio-ingressgateway: Refreshing state... [id=istio-ingressgateway]
helm_release.istio-ingress: Refreshing state... [id=istio-ingress]
module.kubeflow-components.kubernetes_namespace.kubeflow_user_profile: Refreshing state... [id=kubeflow-user-example-com]
module.kubeflow-components.random_string.minio_access_key: Refreshing state... [id=P6d0lYDnKCIE6EAz]
module.kubeflow-components.helm_release.pv_efs: Refreshing state... [id=pv-efs]
module.kubeflow-components.random_password.minio_secret_key: Refreshing state... [id=none]
helm_release.dex: Refreshing state... [id=dex]
module.kubeflow-components.helm_release.kubeflow-roles: Refreshing state... [id=kubeflow-roles]
module.kubeflow-components.helm_release.kuberay-operator: Refreshing state... [id=kuberay-operator]
module.kubeflow-components.helm_release.kubeflow-training-operator: Refreshing state... [id=kubeflow-training-operator]
module.kubeflow-components.helm_release.pv_fsx: Refreshing state... [id=pv-fsx]
module.kubeflow-components.helm_release.user_profile_pv_fsx: Refreshing state... [id=user-profile-pv-fsx]
module.kubeflow-components.helm_release.user_profile_pv_efs: Refreshing state... [id=user-profile-pv-efs]
helm_release.oauth2-proxy: Refreshing state... [id=oauth2-proxy]
helm_release.oauth2-proxy-route: Refreshing state... [id=oauth2-proxy-route]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place
-/+ destroy and then create replacement
 <= read (data resources)

Terraform will perform the following actions:

  # aws_eks_node_group.system_ng must be replaced
-/+ resource "aws_eks_node_group" "system_ng" {
      ~ arn                    = "arn:aws:eks:ap-southeast-4:043632497353:nodegroup/efa-blog-cluster/system/accc52d8-cf3b-2670-835a-4165c4339ddd" -> (known after apply)
      ~ id                     = "efa-blog-cluster:system" -> (known after apply)
      ~ instance_types         = [ # forces replacement
            # (6 unchanged elements hidden)
            "m5.4xlarge",
          + "m5.large",
          + "m5.xlarge",
          + "m5.2xlarge",
          + "m5.4xlarge",
        ]
      - labels                 = {} -> null
      + node_group_name_prefix = (known after apply)
      ~ release_version        = "1.33.3-20250807" -> (known after apply)
      ~ resources              = [
          - {
              - autoscaling_groups              = [
                  - {
                      - name = "eks-system-accc52d8-cf3b-2670-835a-4165c4339ddd"
                    },
                ]
                # (1 unchanged attribute hidden)
            },
        ] -> (known after apply)
      ~ status                 = "ACTIVE" -> (known after apply)
      - tags                   = {} -> null
      ~ tags_all               = {} -> (known after apply)
      ~ version                = "1.33" -> (known after apply)
        # (8 unchanged attributes hidden)

      ~ node_repair_config (known after apply)

      ~ update_config (known after apply)
      - update_config {
          - max_unavailable            = 1 -> null
          - max_unavailable_percentage = 0 -> null
        }

        # (1 unchanged block hidden)
    }

  # null_resource.git_clone must be replaced
-/+ resource "null_resource" "git_clone" {
      ~ id       = "4542936971944722173" -> (known after apply)
      ~ triggers = { # forces replacement
          ~ "always_run" = "2025-08-13T23:08:57Z" -> (known after apply)
        }
    }

  # module.cert_manager.data.aws_caller_identity.current[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_caller_identity" "current" {
      + account_id = (known after apply)
      + arn        = (known after apply)
      + id         = (known after apply)
      + user_id    = (known after apply)
    }

  # module.cert_manager.data.aws_iam_policy_document.assume[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "assume" {
      + id            = (known after apply)
      + json          = (known after apply)
      + minified_json = (known after apply)

      + statement {
          + actions = [
              + "sts:AssumeRole",
            ]
          + effect  = "Allow"
          + sid     = "ExplicitSelfRoleAssumption"

          + condition {
              + test     = "ArnLike"
              + values   = [
                  + (known after apply),
                ]
              + variable = "aws:PrincipalArn"
            }

          + principals {
              + identifiers = [
                  + "*",
                ]
              + type        = "AWS"
            }
        }
      + statement {
          + actions = [
              + "sts:AssumeRoleWithWebIdentity",
            ]
          + effect  = "Allow"

          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "sts.amazonaws.com",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud"
            }
          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "system:serviceaccount:cert-manager:cert-manager",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub"
            }

          + principals {
              + identifiers = [
                  + "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635",
                ]
              + type        = "Federated"
            }
        }
    }

  # module.cert_manager.data.aws_iam_policy_document.this[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_iam_policy_document" "this" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + minified_json             = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = [
          + jsonencode(
                {
                  + Statement = [
                      + {
                          + Action   = "route53:GetChange"
                          + Effect   = "Allow"
                          + Resource = "arn:aws:route53:::change/*"
                        },
                      + {
                          + Action   = [
                              + "route53:ListResourceRecordSets",
                              + "route53:ChangeResourceRecordSets",
                            ]
                          + Effect   = "Allow"
                          + Resource = "arn:aws:route53:::hostedzone/*"
                        },
                      + {
                          + Action   = "route53:ListHostedZonesByName"
                          + Effect   = "Allow"
                          + Resource = "*"
                        },
                    ]
                  + Version   = "2012-10-17"
                }
            ),
        ]
    }

  # module.cert_manager.data.aws_partition.current[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_partition" "current" {
      + dns_suffix         = (known after apply)
      + id                 = (known after apply)
      + partition          = (known after apply)
      + reverse_dns_prefix = (known after apply)
    }

  # module.cert_manager.aws_iam_policy.this[0] will be updated in-place
  ~ resource "aws_iam_policy" "this" {
        id               = "arn:aws:iam::043632497353:policy/cert-manager-2025081323122093210000000b"
        name             = "cert-manager-2025081323122093210000000b"
      ~ policy           = jsonencode(
            {
              - Statement = [
                  - {
                      - Action   = "route53:GetChange"
                      - Effect   = "Allow"
                      - Resource = "arn:aws:route53:::change/*"
                    },
                  - {
                      - Action   = [
                          - "route53:ListResourceRecordSets",
                          - "route53:ChangeResourceRecordSets",
                        ]
                      - Effect   = "Allow"
                      - Resource = "arn:aws:route53:::hostedzone/*"
                    },
                  - {
                      - Action   = "route53:ListHostedZonesByName"
                      - Effect   = "Allow"
                      - Resource = "*"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        tags             = {}
        # (7 unchanged attributes hidden)
    }

  # module.cert_manager.aws_iam_role.this[0] will be updated in-place
  ~ resource "aws_iam_role" "this" {
      ~ assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Condition = {
                          - ArnLike = {
                              - "aws:PrincipalArn" = "arn:aws:iam::043632497353:role/cert-manager-*"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - AWS = "*"
                        }
                      - Sid       = "ExplicitSelfRoleAssumption"
                    },
                  - {
                      - Action    = "sts:AssumeRoleWithWebIdentity"
                      - Condition = {
                          - StringEquals = {
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud" = "sts.amazonaws.com"
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub" = "system:serviceaccount:cert-manager:cert-manager"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Federated = "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635"
                        }
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        id                    = "cert-manager-2025081323122095520000000c"
        name                  = "cert-manager-2025081323122095520000000c"
        tags                  = {}
        # (11 unchanged attributes hidden)
    }

  # module.eks_blueprints_addons.data.aws_caller_identity.current will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_caller_identity" "current" {
      + account_id = (known after apply)
      + arn        = (known after apply)
      + id         = (known after apply)
      + user_id    = (known after apply)
    }

  # module.eks_blueprints_addons.data.aws_eks_addon_version.this["aws-ebs-csi-driver"] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_eks_addon_version" "this" {
      + addon_name         = "aws-ebs-csi-driver"
      + id                 = (known after apply)
      + kubernetes_version = "1.33"
      + most_recent        = true
      + region             = (known after apply)
      + version            = (known after apply)
    }

  # module.eks_blueprints_addons.data.aws_iam_policy_document.aws_efs_csi_driver[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "aws_efs_csi_driver" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + minified_json             = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = []

      + statement {
          + actions   = [
              + "ec2:DescribeAvailabilityZones",
            ]
          + resources = [
              + "*",
            ]
          + sid       = "AllowDescribeAvailabilityZones"
        }
      + statement {
          + actions   = [
              + "elasticfilesystem:DescribeAccessPoints",
              + "elasticfilesystem:DescribeFileSystems",
              + "elasticfilesystem:DescribeMountTargets",
            ]
          + resources = [
              + (known after apply),
              + (known after apply),
            ]
          + sid       = "AllowDescribeFileSystems"
        }
      + statement {
          + actions   = [
              + "elasticfilesystem:CreateAccessPoint",
              + "elasticfilesystem:TagResource",
            ]
          + resources = [
              + (known after apply),
            ]

          + condition {
              + test     = "StringLike"
              + values   = [
                  + "true",
                ]
              + variable = "aws:RequestTag/efs.csi.aws.com/cluster"
            }
        }
      + statement {
          + actions   = [
              + "elasticfilesystem:DeleteAccessPoint",
            ]
          + resources = [
              + (known after apply),
            ]
          + sid       = "AllowDeleteAccessPoint"

          + condition {
              + test     = "StringLike"
              + values   = [
                  + "true",
                ]
              + variable = "aws:ResourceTag/efs.csi.aws.com/cluster"
            }
        }
      + statement {
          + actions   = [
              + "elasticfilesystem:ClientMount",
              + "elasticfilesystem:ClientRootAccess",
              + "elasticfilesystem:ClientWrite",
            ]
          + resources = [
              + (known after apply),
            ]
          + sid       = "ClientReadWrite"

          + condition {
              + test     = "Bool"
              + values   = [
                  + "true",
                ]
              + variable = "elasticfilesystem:AccessedViaMountTarget"
            }
        }
    }

  # module.eks_blueprints_addons.data.aws_iam_policy_document.aws_fsx_csi_driver[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "aws_fsx_csi_driver" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + minified_json             = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = []

      + statement {
          + actions   = [
              + "iam:AttachRolePolicy",
              + "iam:CreateServiceLinkedRole",
              + "iam:PutRolePolicy",
            ]
          + resources = [
              + (known after apply),
            ]
          + sid       = "AllowCreateServiceLinkedRoles"
        }
      + statement {
          + actions   = [
              + "iam:CreateServiceLinkedRole",
            ]
          + resources = [
              + (known after apply),
            ]
          + sid       = "AllowCreateServiceLinkedRole"

          + condition {
              + test     = "StringLike"
              + values   = [
                  + "fsx.amazonaws.com",
                ]
              + variable = "iam:AWSServiceName"
            }
        }
      + statement {
          + actions   = [
              + "s3:ListBucket",
            ]
          + resources = [
              + (known after apply),
            ]
          + sid       = "AllowListBuckets"
        }
      + statement {
          + actions   = [
              + "fsx:CreateFileSystem",
              + "fsx:DeleteFileSystem",
              + "fsx:UpdateFileSystem",
            ]
          + resources = [
              + (known after apply),
            ]
        }
      + statement {
          + actions   = [
              + "fsx:DescribeFileSystems",
              + "fsx:TagResource",
            ]
          + resources = [
              + (known after apply),
            ]
        }
    }

  # module.eks_blueprints_addons.data.aws_iam_policy_document.aws_load_balancer_controller[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "aws_load_balancer_controller" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + minified_json             = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = []

      + statement {
          + actions   = [
              + "iam:CreateServiceLinkedRole",
            ]
          + resources = [
              + "*",
            ]

          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "elasticloadbalancing.amazonaws.com",
                ]
              + variable = "iam:AWSServiceName"
            }
        }
      + statement {
          + actions   = [
              + "ec2:DescribeAccountAttributes",
              + "ec2:DescribeAddresses",
              + "ec2:DescribeAvailabilityZones",
              + "ec2:DescribeCoipPools",
              + "ec2:DescribeInstances",
              + "ec2:DescribeInternetGateways",
              + "ec2:DescribeIpamPools",
              + "ec2:DescribeNetworkInterfaces",
              + "ec2:DescribeSecurityGroups",
              + "ec2:DescribeSubnets",
              + "ec2:DescribeTags",
              + "ec2:DescribeVpcPeeringConnections",
              + "ec2:DescribeVpcs",
              + "ec2:GetCoipPoolUsage",
              + "ec2:GetSecurityGroupsForVpc",
              + "elasticloadbalancing:DescribeCapacityReservation",
              + "elasticloadbalancing:DescribeListenerAttributes",
              + "elasticloadbalancing:DescribeListenerCertificates",
              + "elasticloadbalancing:DescribeListeners",
              + "elasticloadbalancing:DescribeLoadBalancerAttributes",
              + "elasticloadbalancing:DescribeLoadBalancers",
              + "elasticloadbalancing:DescribeRules",
              + "elasticloadbalancing:DescribeSSLPolicies",
              + "elasticloadbalancing:DescribeTags",
              + "elasticloadbalancing:DescribeTargetGroupAttributes",
              + "elasticloadbalancing:DescribeTargetGroups",
              + "elasticloadbalancing:DescribeTargetHealth",
              + "elasticloadbalancing:DescribeTrustStores",
            ]
          + resources = [
              + "*",
            ]
        }
      + statement {
          + actions   = [
              + "acm:DescribeCertificate",
              + "acm:ListCertificates",
              + "cognito-idp:DescribeUserPoolClient",
              + "iam:GetServerCertificate",
              + "iam:ListServerCertificates",
              + "shield:CreateProtection",
              + "shield:DeleteProtection",
              + "shield:DescribeProtection",
              + "shield:GetSubscriptionState",
              + "waf-regional:AssociateWebACL",
              + "waf-regional:DisassociateWebACL",
              + "waf-regional:GetWebACL",
              + "waf-regional:GetWebACLForResource",
              + "wafv2:AssociateWebACL",
              + "wafv2:DisassociateWebACL",
              + "wafv2:GetWebACL",
              + "wafv2:GetWebACLForResource",
            ]
          + resources = [
              + "*",
            ]
        }
      + statement {
          + actions   = [
              + "ec2:AuthorizeSecurityGroupIngress",
              + "ec2:RevokeSecurityGroupIngress",
            ]
          + resources = [
              + "*",
            ]
        }
      + statement {
          + actions   = [
              + "ec2:CreateSecurityGroup",
            ]
          + resources = [
              + "*",
            ]
        }
      + statement {
          + actions   = [
              + "ec2:CreateTags",
            ]
          + resources = [
              + (known after apply),
            ]

          + condition {
              + test     = "Null"
              + values   = [
                  + "false",
                ]
              + variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "CreateSecurityGroup",
                ]
              + variable = "ec2:CreateAction"
            }
        }
      + statement {
          + actions   = [
              + "ec2:CreateTags",
              + "ec2:DeleteTags",
            ]
          + resources = [
              + (known after apply),
            ]

          + condition {
              + test     = "Null"
              + values   = [
                  + "false",
                ]
              + variable = "aws:ResourceTag/elbv2.k8s.aws/cluster"
            }
          + condition {
              + test     = "Null"
              + values   = [
                  + "true",
                ]
              + variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
        }
      + statement {
          + actions   = [
              + "ec2:AuthorizeSecurityGroupIngress",
              + "ec2:DeleteSecurityGroup",
              + "ec2:RevokeSecurityGroupIngress",
            ]
          + resources = [
              + "*",
            ]

          + condition {
              + test     = "Null"
              + values   = [
                  + "false",
                ]
              + variable = "aws:ResourceTag/elbv2.k8s.aws/cluster"
            }
        }
      + statement {
          + actions   = [
              + "elasticloadbalancing:CreateLoadBalancer",
              + "elasticloadbalancing:CreateTargetGroup",
            ]
          + resources = [
              + "*",
            ]

          + condition {
              + test     = "Null"
              + values   = [
                  + "false",
                ]
              + variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
        }
      + statement {
          + actions   = [
              + "elasticloadbalancing:CreateListener",
              + "elasticloadbalancing:CreateRule",
              + "elasticloadbalancing:DeleteListener",
              + "elasticloadbalancing:DeleteRule",
            ]
          + resources = [
              + "*",
            ]
        }
      + statement {
          + actions   = [
              + "elasticloadbalancing:AddTags",
              + "elasticloadbalancing:RemoveTags",
            ]
          + resources = [
              + (known after apply),
              + (known after apply),
              + (known after apply),
            ]

          + condition {
              + test     = "Null"
              + values   = [
                  + "false",
                ]
              + variable = "aws:ResourceTag/elbv2.k8s.aws/cluster"
            }
          + condition {
              + test     = "Null"
              + values   = [
                  + "true",
                ]
              + variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
        }
      + statement {
          + actions   = [
              + "elasticloadbalancing:AddTags",
              + "elasticloadbalancing:RemoveTags",
            ]
          + resources = [
              + (known after apply),
              + (known after apply),
              + (known after apply),
              + (known after apply),
            ]
        }
      + statement {
          + actions   = [
              + "elasticloadbalancing:DeleteLoadBalancer",
              + "elasticloadbalancing:DeleteTargetGroup",
              + "elasticloadbalancing:ModifyCapacityReservation",
              + "elasticloadbalancing:ModifyIpPools",
              + "elasticloadbalancing:ModifyListenerAttributes",
              + "elasticloadbalancing:ModifyLoadBalancerAttributes",
              + "elasticloadbalancing:ModifyTargetGroup",
              + "elasticloadbalancing:ModifyTargetGroupAttributes",
              + "elasticloadbalancing:SetIpAddressType",
              + "elasticloadbalancing:SetSecurityGroups",
              + "elasticloadbalancing:SetSubnets",
            ]
          + resources = [
              + "*",
            ]

          + condition {
              + test     = "Null"
              + values   = [
                  + "false",
                ]
              + variable = "aws:ResourceTag/elbv2.k8s.aws/cluster"
            }
        }
      + statement {
          + actions   = [
              + "elasticloadbalancing:AddTags",
            ]
          + resources = [
              + (known after apply),
              + (known after apply),
              + (known after apply),
            ]

          + condition {
              + test     = "Null"
              + values   = [
                  + "false",
                ]
              + variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "CreateTargetGroup",
                  + "CreateLoadBalancer",
                ]
              + variable = "elasticloadbalancing:CreateAction"
            }
        }
      + statement {
          + actions   = [
              + "elasticloadbalancing:DeregisterTargets",
              + "elasticloadbalancing:RegisterTargets",
            ]
          + resources = [
              + (known after apply),
            ]
        }
      + statement {
          + actions   = [
              + "elasticloadbalancing:AddListenerCertificates",
              + "elasticloadbalancing:ModifyListener",
              + "elasticloadbalancing:ModifyRule",
              + "elasticloadbalancing:RemoveListenerCertificates",
              + "elasticloadbalancing:SetRulePriorities",
              + "elasticloadbalancing:SetWebAcl",
            ]
          + resources = [
              + "*",
            ]
        }
    }

  # module.eks_blueprints_addons.data.aws_partition.current will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_partition" "current" {
      + dns_suffix         = (known after apply)
      + id                 = (known after apply)
      + partition          = (known after apply)
      + reverse_dns_prefix = (known after apply)
    }

  # module.eks_blueprints_addons.data.aws_region.current will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_region" "current" {
      + description = (known after apply)
      + endpoint    = (known after apply)
      + id          = (known after apply)
      + name        = (known after apply)
      + region      = (known after apply)
    }

  # module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_caller_identity.current[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_caller_identity" "current" {
      + account_id = (known after apply)
      + arn        = (known after apply)
      + id         = (known after apply)
      + user_id    = (known after apply)
    }

  # module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_iam_policy_document.assume[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_iam_policy_document" "assume" {
      + id            = (known after apply)
      + json          = (known after apply)
      + minified_json = (known after apply)

      + statement {
          + actions = [
              + "sts:AssumeRoleWithWebIdentity",
            ]
          + effect  = "Allow"

          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "sts.amazonaws.com",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud"
            }
          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "system:serviceaccount:kube-system:efs-csi-controller-sa",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub"
            }

          + principals {
              + identifiers = [
                  + "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635",
                ]
              + type        = "Federated"
            }
        }
      + statement {
          + actions = [
              + "sts:AssumeRoleWithWebIdentity",
            ]
          + effect  = "Allow"

          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "sts.amazonaws.com",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud"
            }
          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "system:serviceaccount:kube-system:efs-csi-node-sa",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub"
            }

          + principals {
              + identifiers = [
                  + "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635",
                ]
              + type        = "Federated"
            }
        }
    }

  # module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_iam_policy_document.this[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "this" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + minified_json             = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = [
          + (known after apply),
        ]
    }

  # module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_partition.current[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_partition" "current" {
      + dns_suffix         = (known after apply)
      + id                 = (known after apply)
      + partition          = (known after apply)
      + reverse_dns_prefix = (known after apply)
    }

  # module.eks_blueprints_addons.module.aws_efs_csi_driver.aws_iam_policy.this[0] will be updated in-place
  ~ resource "aws_iam_policy" "this" {
        id               = "arn:aws:iam::043632497353:policy/aws-efs-csi-driver-20250813231058263900000006"
        name             = "aws-efs-csi-driver-20250813231058263900000006"
      ~ policy           = jsonencode(
            {
              - Statement = [
                  - {
                      - Action   = "ec2:DescribeAvailabilityZones"
                      - Effect   = "Allow"
                      - Resource = "*"
                      - Sid      = "AllowDescribeAvailabilityZones"
                    },
                  - {
                      - Action   = [
                          - "elasticfilesystem:DescribeMountTargets",
                          - "elasticfilesystem:DescribeFileSystems",
                          - "elasticfilesystem:DescribeAccessPoints",
                        ]
                      - Effect   = "Allow"
                      - Resource = [
                          - "arn:aws:elasticfilesystem:ap-southeast-4:043632497353:file-system/*",
                          - "arn:aws:elasticfilesystem:ap-southeast-4:043632497353:access-point/*",
                        ]
                      - Sid      = "AllowDescribeFileSystems"
                    },
                  - {
                      - Action    = [
                          - "elasticfilesystem:TagResource",
                          - "elasticfilesystem:CreateAccessPoint",
                        ]
                      - Condition = {
                          - StringLike = {
                              - "aws:RequestTag/efs.csi.aws.com/cluster" = "true"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "arn:aws:elasticfilesystem:ap-southeast-4:043632497353:file-system/*"
                    },
                  - {
                      - Action    = "elasticfilesystem:DeleteAccessPoint"
                      - Condition = {
                          - StringLike = {
                              - "aws:ResourceTag/efs.csi.aws.com/cluster" = "true"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "arn:aws:elasticfilesystem:ap-southeast-4:043632497353:access-point/*"
                      - Sid       = "AllowDeleteAccessPoint"
                    },
                  - {
                      - Action    = [
                          - "elasticfilesystem:ClientWrite",
                          - "elasticfilesystem:ClientRootAccess",
                          - "elasticfilesystem:ClientMount",
                        ]
                      - Condition = {
                          - Bool = {
                              - "elasticfilesystem:AccessedViaMountTarget" = "true"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "arn:aws:elasticfilesystem:ap-southeast-4:043632497353:file-system/*"
                      - Sid       = "ClientReadWrite"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        tags             = {}
        # (7 unchanged attributes hidden)
    }

  # module.eks_blueprints_addons.module.aws_efs_csi_driver.aws_iam_role.this[0] will be updated in-place
  ~ resource "aws_iam_role" "this" {
      ~ assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRoleWithWebIdentity"
                      - Condition = {
                          - StringEquals = {
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud" = "sts.amazonaws.com"
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub" = "system:serviceaccount:kube-system:efs-csi-controller-sa"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Federated = "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635"
                        }
                    },
                  - {
                      - Action    = "sts:AssumeRoleWithWebIdentity"
                      - Condition = {
                          - StringEquals = {
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud" = "sts.amazonaws.com"
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub" = "system:serviceaccount:kube-system:efs-csi-node-sa"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Federated = "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635"
                        }
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        id                    = "aws-efs-csi-driver-20250813231126647100000008"
        name                  = "aws-efs-csi-driver-20250813231126647100000008"
        tags                  = {}
        # (11 unchanged attributes hidden)
    }

  # module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_caller_identity.current[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_caller_identity" "current" {
      + account_id = (known after apply)
      + arn        = (known after apply)
      + id         = (known after apply)
      + user_id    = (known after apply)
    }

  # module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_iam_policy_document.assume[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_iam_policy_document" "assume" {
      + id            = (known after apply)
      + json          = (known after apply)
      + minified_json = (known after apply)

      + statement {
          + actions = [
              + "sts:AssumeRoleWithWebIdentity",
            ]
          + effect  = "Allow"

          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "sts.amazonaws.com",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud"
            }
          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "system:serviceaccount:kube-system:aws-fsx-csi-controller-sa",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub"
            }

          + principals {
              + identifiers = [
                  + "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635",
                ]
              + type        = "Federated"
            }
        }
      + statement {
          + actions = [
              + "sts:AssumeRoleWithWebIdentity",
            ]
          + effect  = "Allow"

          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "sts.amazonaws.com",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud"
            }
          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "system:serviceaccount:kube-system:aws-fsx-csi-node-sa",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub"
            }

          + principals {
              + identifiers = [
                  + "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635",
                ]
              + type        = "Federated"
            }
        }
    }

  # module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_iam_policy_document.this[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "this" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + minified_json             = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = [
          + (known after apply),
        ]
    }

  # module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_partition.current[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_partition" "current" {
      + dns_suffix         = (known after apply)
      + id                 = (known after apply)
      + partition          = (known after apply)
      + reverse_dns_prefix = (known after apply)
    }

  # module.eks_blueprints_addons.module.aws_fsx_csi_driver.aws_iam_policy.this[0] will be updated in-place
  ~ resource "aws_iam_policy" "this" {
        id               = "arn:aws:iam::043632497353:policy/aws-fsx-csi-driver-20250813231058180400000005"
        name             = "aws-fsx-csi-driver-20250813231058180400000005"
      ~ policy           = jsonencode(
            {
              - Statement = [
                  - {
                      - Action   = [
                          - "iam:PutRolePolicy",
                          - "iam:CreateServiceLinkedRole",
                          - "iam:AttachRolePolicy",
                        ]
                      - Effect   = "Allow"
                      - Resource = "arn:aws:iam::*:role/aws-service-role/s3.data-source.lustre.fsx.amazonaws.com/*"
                      - Sid      = "AllowCreateServiceLinkedRoles"
                    },
                  - {
                      - Action    = "iam:CreateServiceLinkedRole"
                      - Condition = {
                          - StringLike = {
                              - "iam:AWSServiceName" = "fsx.amazonaws.com"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "arn:aws:iam::043632497353:role/*"
                      - Sid       = "AllowCreateServiceLinkedRole"
                    },
                  - {
                      - Action   = "s3:ListBucket"
                      - Effect   = "Allow"
                      - Resource = "arn:aws:s3:::*"
                      - Sid      = "AllowListBuckets"
                    },
                  - {
                      - Action   = [
                          - "fsx:UpdateFileSystem",
                          - "fsx:DeleteFileSystem",
                          - "fsx:CreateFileSystem",
                        ]
                      - Effect   = "Allow"
                      - Resource = "arn:aws:fsx:ap-southeast-4:043632497353:file-system/*"
                    },
                  - {
                      - Action   = [
                          - "fsx:TagResource",
                          - "fsx:DescribeFileSystems",
                        ]
                      - Effect   = "Allow"
                      - Resource = "arn:aws:fsx:ap-southeast-4:043632497353:*"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        tags             = {}
        # (7 unchanged attributes hidden)
    }

  # module.eks_blueprints_addons.module.aws_fsx_csi_driver.aws_iam_role.this[0] will be updated in-place
  ~ resource "aws_iam_role" "this" {
      ~ assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRoleWithWebIdentity"
                      - Condition = {
                          - StringEquals = {
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud" = "sts.amazonaws.com"
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub" = "system:serviceaccount:kube-system:aws-fsx-csi-controller-sa"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Federated = "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635"
                        }
                    },
                  - {
                      - Action    = "sts:AssumeRoleWithWebIdentity"
                      - Condition = {
                          - StringEquals = {
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud" = "sts.amazonaws.com"
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub" = "system:serviceaccount:kube-system:aws-fsx-csi-node-sa"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Federated = "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635"
                        }
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        id                    = "aws-fsx-csi-driver-2025081323112665280000000a"
        name                  = "aws-fsx-csi-driver-2025081323112665280000000a"
        tags                  = {}
        # (11 unchanged attributes hidden)
    }

  # module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_caller_identity.current[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_caller_identity" "current" {
      + account_id = (known after apply)
      + arn        = (known after apply)
      + id         = (known after apply)
      + user_id    = (known after apply)
    }

  # module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.assume[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_iam_policy_document" "assume" {
      + id            = (known after apply)
      + json          = (known after apply)
      + minified_json = (known after apply)

      + statement {
          + actions = [
              + "sts:AssumeRoleWithWebIdentity",
            ]
          + effect  = "Allow"

          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "sts.amazonaws.com",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud"
            }
          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "system:serviceaccount:kube-system:aws-load-balancer-controller-sa",
                ]
              + variable = "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub"
            }

          + principals {
              + identifiers = [
                  + "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635",
                ]
              + type        = "Federated"
            }
        }
    }

  # module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.this[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "this" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + minified_json             = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = [
          + (known after apply),
        ]
    }

  # module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_partition.current[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_partition" "current" {
      + dns_suffix         = (known after apply)
      + id                 = (known after apply)
      + partition          = (known after apply)
      + reverse_dns_prefix = (known after apply)
    }

  # module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_policy.this[0] will be updated in-place
  ~ resource "aws_iam_policy" "this" {
        id               = "arn:aws:iam::043632497353:policy/alb-controller-20250813231056802500000004"
        name             = "alb-controller-20250813231056802500000004"
      ~ policy           = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "iam:CreateServiceLinkedRole"
                      - Condition = {
                          - StringEquals = {
                              - "iam:AWSServiceName" = "elasticloadbalancing.amazonaws.com"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "*"
                    },
                  - {
                      - Action   = [
                          - "elasticloadbalancing:DescribeTrustStores",
                          - "elasticloadbalancing:DescribeTargetHealth",
                          - "elasticloadbalancing:DescribeTargetGroups",
                          - "elasticloadbalancing:DescribeTargetGroupAttributes",
                          - "elasticloadbalancing:DescribeTags",
                          - "elasticloadbalancing:DescribeSSLPolicies",
                          - "elasticloadbalancing:DescribeRules",
                          - "elasticloadbalancing:DescribeLoadBalancers",
                          - "elasticloadbalancing:DescribeLoadBalancerAttributes",
                          - "elasticloadbalancing:DescribeListeners",
                          - "elasticloadbalancing:DescribeListenerCertificates",
                          - "elasticloadbalancing:DescribeListenerAttributes",
                          - "elasticloadbalancing:DescribeCapacityReservation",
                          - "ec2:GetSecurityGroupsForVpc",
                          - "ec2:GetCoipPoolUsage",
                          - "ec2:DescribeVpcs",
                          - "ec2:DescribeVpcPeeringConnections",
                          - "ec2:DescribeTags",
                          - "ec2:DescribeSubnets",
                          - "ec2:DescribeSecurityGroups",
                          - "ec2:DescribeNetworkInterfaces",
                          - "ec2:DescribeIpamPools",
                          - "ec2:DescribeInternetGateways",
                          - "ec2:DescribeInstances",
                          - "ec2:DescribeCoipPools",
                          - "ec2:DescribeAvailabilityZones",
                          - "ec2:DescribeAddresses",
                          - "ec2:DescribeAccountAttributes",
                        ]
                      - Effect   = "Allow"
                      - Resource = "*"
                    },
                  - {
                      - Action   = [
                          - "wafv2:GetWebACLForResource",
                          - "wafv2:GetWebACL",
                          - "wafv2:DisassociateWebACL",
                          - "wafv2:AssociateWebACL",
                          - "waf-regional:GetWebACLForResource",
                          - "waf-regional:GetWebACL",
                          - "waf-regional:DisassociateWebACL",
                          - "waf-regional:AssociateWebACL",
                          - "shield:GetSubscriptionState",
                          - "shield:DescribeProtection",
                          - "shield:DeleteProtection",
                          - "shield:CreateProtection",
                          - "iam:ListServerCertificates",
                          - "iam:GetServerCertificate",
                          - "cognito-idp:DescribeUserPoolClient",
                          - "acm:ListCertificates",
                          - "acm:DescribeCertificate",
                        ]
                      - Effect   = "Allow"
                      - Resource = "*"
                    },
                  - {
                      - Action   = [
                          - "ec2:RevokeSecurityGroupIngress",
                          - "ec2:AuthorizeSecurityGroupIngress",
                        ]
                      - Effect   = "Allow"
                      - Resource = "*"
                    },
                  - {
                      - Action   = "ec2:CreateSecurityGroup"
                      - Effect   = "Allow"
                      - Resource = "*"
                    },
                  - {
                      - Action    = "ec2:CreateTags"
                      - Condition = {
                          - Null         = {
                              - "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                          - StringEquals = {
                              - "ec2:CreateAction" = "CreateSecurityGroup"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "arn:aws:ec2:*:*:security-group/*"
                    },
                  - {
                      - Action    = [
                          - "ec2:DeleteTags",
                          - "ec2:CreateTags",
                        ]
                      - Condition = {
                          - Null = {
                              - "aws:RequestTag/elbv2.k8s.aws/cluster"  = "true"
                              - "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "arn:aws:ec2:*:*:security-group/*"
                    },
                  - {
                      - Action    = [
                          - "ec2:RevokeSecurityGroupIngress",
                          - "ec2:DeleteSecurityGroup",
                          - "ec2:AuthorizeSecurityGroupIngress",
                        ]
                      - Condition = {
                          - Null = {
                              - "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "*"
                    },
                  - {
                      - Action    = [
                          - "elasticloadbalancing:CreateTargetGroup",
                          - "elasticloadbalancing:CreateLoadBalancer",
                        ]
                      - Condition = {
                          - Null = {
                              - "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "*"
                    },
                  - {
                      - Action   = [
                          - "elasticloadbalancing:DeleteRule",
                          - "elasticloadbalancing:DeleteListener",
                          - "elasticloadbalancing:CreateRule",
                          - "elasticloadbalancing:CreateListener",
                        ]
                      - Effect   = "Allow"
                      - Resource = "*"
                    },
                  - {
                      - Action    = [
                          - "elasticloadbalancing:RemoveTags",
                          - "elasticloadbalancing:AddTags",
                        ]
                      - Condition = {
                          - Null = {
                              - "aws:RequestTag/elbv2.k8s.aws/cluster"  = "true"
                              - "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = [
                          - "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                          - "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                          - "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                        ]
                    },
                  - {
                      - Action   = [
                          - "elasticloadbalancing:RemoveTags",
                          - "elasticloadbalancing:AddTags",
                        ]
                      - Effect   = "Allow"
                      - Resource = [
                          - "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*",
                          - "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                          - "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                          - "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                        ]
                    },
                  - {
                      - Action    = [
                          - "elasticloadbalancing:SetSubnets",
                          - "elasticloadbalancing:SetSecurityGroups",
                          - "elasticloadbalancing:SetIpAddressType",
                          - "elasticloadbalancing:ModifyTargetGroupAttributes",
                          - "elasticloadbalancing:ModifyTargetGroup",
                          - "elasticloadbalancing:ModifyLoadBalancerAttributes",
                          - "elasticloadbalancing:ModifyListenerAttributes",
                          - "elasticloadbalancing:ModifyIpPools",
                          - "elasticloadbalancing:ModifyCapacityReservation",
                          - "elasticloadbalancing:DeleteTargetGroup",
                          - "elasticloadbalancing:DeleteLoadBalancer",
                        ]
                      - Condition = {
                          - Null = {
                              - "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = "*"
                    },
                  - {
                      - Action    = "elasticloadbalancing:AddTags"
                      - Condition = {
                          - Null         = {
                              - "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                          - StringEquals = {
                              - "elasticloadbalancing:CreateAction" = [
                                  - "CreateTargetGroup",
                                  - "CreateLoadBalancer",
                                ]
                            }
                        }
                      - Effect    = "Allow"
                      - Resource  = [
                          - "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                          - "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                          - "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                        ]
                    },
                  - {
                      - Action   = [
                          - "elasticloadbalancing:RegisterTargets",
                          - "elasticloadbalancing:DeregisterTargets",
                        ]
                      - Effect   = "Allow"
                      - Resource = "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                    },
                  - {
                      - Action   = [
                          - "elasticloadbalancing:SetWebAcl",
                          - "elasticloadbalancing:SetRulePriorities",
                          - "elasticloadbalancing:RemoveListenerCertificates",
                          - "elasticloadbalancing:ModifyRule",
                          - "elasticloadbalancing:ModifyListener",
                          - "elasticloadbalancing:AddListenerCertificates",
                        ]
                      - Effect   = "Allow"
                      - Resource = "*"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        tags             = {}
        # (7 unchanged attributes hidden)
    }

  # module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_role.this[0] will be updated in-place
  ~ resource "aws_iam_role" "this" {
      ~ assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRoleWithWebIdentity"
                      - Condition = {
                          - StringEquals = {
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:aud" = "sts.amazonaws.com"
                              - "oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635:sub" = "system:serviceaccount:kube-system:aws-load-balancer-controller-sa"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Federated = "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635"
                        }
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        id                    = "alb-controller-20250813231126648300000009"
        name                  = "alb-controller-20250813231126648300000009"
        tags                  = {}
        # (11 unchanged attributes hidden)
    }

Plan: 2 to add, 8 to change, 2 to destroy.
null_resource.git_clone: Destroying... [id=4542936971944722173]
null_resource.git_clone: Destruction complete after 0s
null_resource.git_clone: Creating...
null_resource.git_clone: Provisioning with 'local-exec'...
null_resource.git_clone (local-exec): Executing: ["/bin/sh" "-c" "rm -rf /tmp/lws || true\ngit clone https://github.com/kubernetes-sigs/lws.git /tmp/lws\ncd /tmp/lws\ngit fetch origin aceee3387f2424067777c32db14378909c3633a5\ngit reset --hard aceee3387f2424067777c32db14378909c3633a5\n"]
null_resource.git_clone (local-exec): Cloning into '/tmp/lws'...
aws_eks_node_group.system_ng: Destroying... [id=efa-blog-cluster:system]
null_resource.git_clone (local-exec): From https://github.com/kubernetes-sigs/lws
null_resource.git_clone (local-exec):  * branch            aceee3387f2424067777c32db14378909c3633a5 -> FETCH_HEAD
null_resource.git_clone (local-exec): HEAD is now at aceee33 Add controllerrevisions rbac to helm chart. (#455)
null_resource.git_clone: Creation complete after 3s [id=7919389988072842600]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 00m10s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 00m20s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 00m30s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 00m40s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 00m50s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 01m00s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 01m10s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 01m20s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 01m30s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 01m40s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 01m50s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 02m00s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 02m10s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 02m20s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 02m30s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 02m40s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 02m50s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 03m00s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 03m10s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 03m20s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 03m30s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 03m40s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 03m50s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 04m00s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 04m10s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 04m20s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 04m30s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 04m40s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 04m50s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 05m00s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 05m10s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 05m20s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 05m30s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 05m40s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 05m50s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 06m00s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 06m10s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 06m20s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 06m30s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 06m40s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 06m50s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 07m00s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 07m10s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 07m20s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 07m30s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 07m40s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 07m50s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 08m00s elapsed]
aws_eks_node_group.system_ng: Still destroying... [id=efa-blog-cluster:system, 08m10s elapsed]
aws_eks_node_group.system_ng: Destruction complete after 8m20s
aws_eks_node_group.system_ng: Creating...
aws_eks_node_group.system_ng: Still creating... [00m10s elapsed]
aws_eks_node_group.system_ng: Still creating... [00m20s elapsed]
aws_eks_node_group.system_ng: Still creating... [00m30s elapsed]
aws_eks_node_group.system_ng: Still creating... [00m40s elapsed]
aws_eks_node_group.system_ng: Still creating... [00m50s elapsed]
aws_eks_node_group.system_ng: Still creating... [01m00s elapsed]
aws_eks_node_group.system_ng: Still creating... [01m10s elapsed]
aws_eks_node_group.system_ng: Still creating... [01m20s elapsed]
aws_eks_node_group.system_ng: Still creating... [01m30s elapsed]
aws_eks_node_group.system_ng: Still creating... [01m40s elapsed]
aws_eks_node_group.system_ng: Creation complete after 1m47s [id=efa-blog-cluster:system]
module.eks_blueprints_addons.data.aws_caller_identity.current: Reading...
module.eks_blueprints_addons.data.aws_caller_identity.current: Read complete after 0s [id=043632497353]
module.eks_blueprints_addons.data.aws_region.current: Reading...
module.eks_blueprints_addons.data.aws_partition.current: Reading...
module.eks_blueprints_addons.data.aws_region.current: Read complete after 0s [id=ap-southeast-4]
module.eks_blueprints_addons.data.aws_partition.current: Read complete after 0s [id=aws]
module.eks_blueprints_addons.data.aws_eks_addon_version.this["aws-ebs-csi-driver"]: Reading...
module.eks_blueprints_addons.data.aws_iam_policy_document.aws_load_balancer_controller[0]: Reading...
module.eks_blueprints_addons.data.aws_iam_policy_document.aws_load_balancer_controller[0]: Read complete after 0s [id=481461162]
module.eks_blueprints_addons.data.aws_eks_addon_version.this["aws-ebs-csi-driver"]: Read complete after 0s [id=aws-ebs-csi-driver]
module.eks_blueprints_addons.data.aws_iam_policy_document.aws_fsx_csi_driver[0]: Reading...
module.eks_blueprints_addons.data.aws_iam_policy_document.aws_fsx_csi_driver[0]: Read complete after 0s [id=960220246]
module.eks_blueprints_addons.data.aws_iam_policy_document.aws_efs_csi_driver[0]: Reading...
module.eks_blueprints_addons.data.aws_iam_policy_document.aws_efs_csi_driver[0]: Read complete after 0s [id=137376992]
module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_caller_identity.current[0]: Reading...
module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_partition.current[0]: Reading...
module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_caller_identity.current[0]: Read complete after 0s [id=043632497353]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_caller_identity.current[0]: Reading...
module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_partition.current[0]: Reading...
module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_partition.current[0]: Read complete after 0s [id=aws]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_caller_identity.current[0]: Read complete after 0s [id=043632497353]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_partition.current[0]: Read complete after 0s [id=aws]
module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_caller_identity.current[0]: Reading...
module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_partition.current[0]: Reading...
module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_caller_identity.current[0]: Read complete after 0s [id=043632497353]
module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_partition.current[0]: Read complete after 0s [id=aws]
module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.this[0]: Reading...
module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=481461162]
module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.assume[0]: Reading...
module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_iam_policy_document.assume[0]: Reading...
module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_iam_policy_document.this[0]: Reading...
module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.assume[0]: Read complete after 0s [id=1191877119]
module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_iam_policy_document.assume[0]: Read complete after 0s [id=3829988235]
module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=137376992]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_iam_policy_document.this[0]: Reading...
module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_iam_policy_document.assume[0]: Reading...
module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_iam_policy_document.assume[0]: Read complete after 0s [id=1083948690]
module.eks_blueprints_addons.module.aws_fsx_csi_driver.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=960220246]
module.cert_manager.data.aws_caller_identity.current[0]: Reading...
module.cert_manager.data.aws_partition.current[0]: Reading...
module.cert_manager.data.aws_iam_policy_document.this[0]: Reading...
module.cert_manager.data.aws_partition.current[0]: Read complete after 0s [id=aws]
module.cert_manager.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=3416383923]
module.cert_manager.data.aws_caller_identity.current[0]: Read complete after 0s [id=043632497353]
module.cert_manager.data.aws_iam_policy_document.assume[0]: Reading...
module.cert_manager.data.aws_iam_policy_document.assume[0]: Read complete after 0s [id=1505943262]

Warning: Value for undeclared variable

The root module does not declare a variable named "capacity_reservation_id"
but a value was found in file "terraform.tfvars". If you meant to use this
value, add a "variable" block to the configuration.

To silence these warnings, use TF_VAR_... environment variables to provide
certain "global" settings to all configurations in your organization. To
reduce the verbosity of these warnings, use the -compact-warnings option.

Warning: Deprecated attribute

  on .terraform/modules/eks_blueprints_addons/main.tf line 21, in locals:
  21:   region     = data.aws_region.current.name

The attribute "name" is deprecated. Refer to the provider documentation for
details.

(and 5 more similar warnings elsewhere)

Apply complete! Resources: 2 added, 0 changed, 2 destroyed.

Outputs:

cluster_endpoint = "https://A44E4CBA1CB62D58F17974C52664F635.gr7.ap-southeast-4.eks.amazonaws.com"
cluster_id = "efa-blog-cluster"
cluster_oidc_arn = "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635"
cluster_subnets = [
  "subnet-00703776efcad98a4",
  "subnet-0705bc7c8b5b22fea",
  "subnet-0723a6a23707c4ffe",
]
cluster_version = "1.33"
cluster_vpc = "vpc-0b76bd974b3f6904b"
efs_dns = "fs-058f520ab98e60ed5.efs.ap-southeast-4.amazonaws.com"
efs_id = "fs-058f520ab98e60ed5"
fsx_id = "fs-0e88d04c8c5c117a9"
fsx_mount_name = "aiuh5bmv"
mlflow_db_secret_arn = []
node_role_arn = "arn:aws:iam::043632497353:role/efa-blog-cluster-node-role"
slurm_db_password = <sensitive>
static_email = "user@example.com"
static_password = <sensitive>
static_username = "user"
[2025-08-13 23:36:23] Retrieving cluster information...
cluster_endpoint = "https://A44E4CBA1CB62D58F17974C52664F635.gr7.ap-southeast-4.eks.amazonaws.com"
cluster_id = "efa-blog-cluster"
cluster_oidc_arn = "arn:aws:iam::043632497353:oidc-provider/oidc.eks.ap-southeast-4.amazonaws.com/id/A44E4CBA1CB62D58F17974C52664F635"
cluster_subnets = [
  "subnet-00703776efcad98a4",
  "subnet-0705bc7c8b5b22fea",
  "subnet-0723a6a23707c4ffe",
]
cluster_version = "1.33"
cluster_vpc = "vpc-0b76bd974b3f6904b"
efs_dns = "fs-058f520ab98e60ed5.efs.ap-southeast-4.amazonaws.com"
efs_id = "fs-058f520ab98e60ed5"
fsx_id = "fs-0e88d04c8c5c117a9"
fsx_mount_name = "aiuh5bmv"
mlflow_db_secret_arn = []
node_role_arn = "arn:aws:iam::043632497353:role/efa-blog-cluster-node-role"
slurm_db_password = <sensitive>
static_email = "user@example.com"
static_password = <sensitive>
static_username = "user"
[2025-08-13 23:36:27] EKS cluster creation process completed successfully
[2025-08-13 23:36:27] Log file saved to: logs/eks_creation_20250813_232518.log
